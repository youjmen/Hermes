name: Android CI

on:

  pull_request:
    branches: [ main , develop ]
  push:
    branches: [ develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Decode google-services.json
      env:
          GOOGLE_SERVICE_JSON: ${{ secrets.GOOGLE_SERVICE_JSON }}
      run: echo $GOOGLE_SERVICE_JSON > app/google-services.json
    - name: Access TTB_KEY
      env:
        TTB_KEY: ${{ secrets.TTB_KEY }}
      run: echo ttb_key=$TTB_KEY > ./local.properties
    - name: Access KAKAO_BASE_URL
      env:
        KAKAO_BASE_URL: ${{ secrets.KAKAO_BASE_URL }}
      run: echo kakao_base_url=$KAKAO_BASE_URL >> ./local.properties
    - name: Access ALADIN_BASE_URL
      env:
        ALADIN_BASE_URL: ${{ secrets.ALADIN_BASE_URL }}
      run: echo aladin_base_url=$ALADIN_BASE_URL >> ./local.properties
    - name: Access NAVER_CLIENT_ID
      env:
        NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
      run: echo naver_client_id=$NAVER_CLIENT_ID >> ./local.properties
    - name: Build result to slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_CI_WEBHOOK_URL }} 
      if: always()
    - name: Build Release AAB
      id: buildRelease
      run: ./gradlew bundleRelease

    - name: Sign AAB
      id: sign
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: app/build/outputs/bundle/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.KEY_ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}

    - name: Upload AAB
      id: uploadArtifact
      uses: actions/upload-artifact@v2.3.1
      with:
        name: app
        path: app/build/outputs/bundle/release/app-release.aab

    - name: Create service_account.json
      id: createServiceAccount
      run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json

    - name: Deploy to Play Store
      id: deploy
      uses: r0adkll/upload-google-play@v1.0.16
      with:
        serviceAccountJson: service_account.json
        packageName: com.jaemin.hermes
        releaseFiles: app/build/outputs/bundle/release/app-release.aab    
      

